#!/bin/bash

# **************************************************************************************************/
## Copyright 2015 ADVANCED MICRO DEVICES, INC.
##
## AMD is granting you permission to use this software and documentation(if any)
## (collectively, the "Materials") pursuant to the terms and conditions of the
## Software License Agreement included with the Materials.If you do not have a
## copy of the Software License Agreement, contact your AMD representative for a
## copy.
##
## You agree that you will not reverse engineer or decompile the Materials, in
## whole or in part, except as allowed by applicable law.
##
## WARRANTY DISCLAIMER : THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF
## ANY KIND.AMD DISCLAIMS ALL WARRANTIES, EXPRESS, IMPLIED, OR STATUTORY,
## INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE, TITLE, NON - INFRINGEMENT, THAT THE
## SOFTWARE WILL RUN UNINTERRUPTED OR ERROR - FREE OR WARRANTIES ARISING FROM
## CUSTOM OF TRADE OR COURSE OF USAGE.THE ENTIRE RISK ASSOCIATED WITH THE USE OF
## THE SOFTWARE IS ASSUMED BY YOU.Some jurisdictions do not allow the exclusion
## of implied warranties, so the above exclusion may not apply to You.
##
## LIMITATION OF LIABILITY AND INDEMNIFICATION : AMD AND ITS LICENSORS WILL NOT,
## UNDER ANY CIRCUMSTANCES BE LIABLE TO YOU FOR ANY PUNITIVE, DIRECT,
## INCIDENTAL, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING FROM USE OF
## THE SOFTWARE OR THIS AGREEMENT EVEN IF AMD AND ITS LICENSORS HAVE BEEN
## ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.In no event shall AMD's total
## liability to You for all damages, losses, and causes of action (whether in
## contract, tort (including negligence) or otherwise) exceed the amount of $100
## USD.  You agree to defend, indemnify and hold harmless AMD and its licensors,
## and any of their directors, officers, employees, affiliates or agents from
## and against any and all loss, damage, liability and other expenses (including
## reasonable attorneys' fees), resulting from Your use of the Software or
## violation of the terms and conditions of this Agreement.
##
## U.S.GOVERNMENT RESTRICTED RIGHTS : The Materials are provided with
## "RESTRICTED RIGHTS." Use, duplication, or disclosure by the Government is
## subject to the restrictions as set forth in FAR 52.227 - 14 and DFAR252.227 -
## 7013, et seq., or its successor.Use of the Materials by the Government
## constitutes acknowledgement of AMD's proprietary rights in them.
##
## EXPORT RESTRICTIONS: The Materials may be subject to export restrictions as
##                      stated in the Software License Agreement.
# ****************************************************************************************************

# A wrapper script to check for the environment and call gdb. This script will:
# Check for gdbinit having hsailConfigure
# Check for amd-gdb executable

# gdb arguments
GDB_ARGS=$*

# Get the full path to the script
SOURCE="${BASH_SOURCE[0]}"
ROOTDIR="$( dirname "$SOURCE" )"
# If any part of the path is a symbolic link
# replace it with the full path
while [ -h "$SOURCE" ]; do
    TARGET="$( readlink "$SOURCE" )"
    if [[ $SOURCE == /* ]]; then
        SOURCE="$TARGET"
    else
        DIR="$( dirname "$SOURCE" )"
        SOURCE="$DIR/$TARGET"
    fi
    if [[ $SOURCE == \.* ]]; then
        SOURCE="$ROOTDIR/$SOURCE"
    fi
done
REALPATH="$( dirname "$SOURCE" )"

# Enable SoftCP mode in the HSA runtime
export HSA_EMULATE_AQL=1
export HSA_TOOLS_LIB="libhsa-runtime-tools64.so.1 libAMDHSADebugAgent-x64.so"

if ! ls $REALPATH/amd-gdb; then
	echo amd-gdb executable not found in folder $REALPATH
	exit -1
fi

# These flags will be used by libhsail
export LIBHSAIL_OPTIONS_APPEND="-g -include-source"
# This flag will be used by runtime to process the debug info when the brig module is added to create a program
export PROGRAM_CREATE_OPTIONS_APPEND="-g"

# Set and export the LD_LIBRARY_PATH for AMDGPUKernelDebugSDK
# This assumes a specific directory structure with AMDHsailGdb and AMDGPUKernelDebugSDK folders are in the same directory
SDK="AMDGPUKernelDebugSDK"
# If the user has specified the SDK path already, use that
# otherwise look for the SDK folder relative to the hsail-gdb folder
if [[ ! "$LD_LIBRARY_PATH" == *$SDK* ]]; then
    for fileName in $( ls $REALPATH/../../.. ); do
        if [[ "$fileName" == *$SDK* ]]; then
            if [[ ! "$fileName" == *tar* ]]; then
                export LD_LIBRARY_PATH=$REALPATH/../../../$fileName/lib/x86_64:${LD_LIBRARY_PATH}
            fi
        fi
    done
    if [[ ! "$LD_LIBRARY_PATH" == *$SDK* ]]; then
        echo The $SDK folder cannot be found.  Please use the directory structure shown in the README and make sure the $SDK folder is specified in the LD_LIBRARY_PATH environment variable.
        exit -1
    fi
fi

# Remove any stale FIFO files
if [ -p fifo-agent-w-gdb-r ]; then
    rm -f fifo-agent-w-gdb-r
fi
if [ -p fifo-gdb-w-agent-r ]; then
    rm -f fifo-gdb-w-agent-r
fi

# We can now call gdb

chmod +x $REALPATH/amd-gdb
export ENABLE_HSAIL_GDB=1

$REALPATH/amd-gdb -iex "add-auto-load-safe-path $REALPATH" -ix $REALPATH/.gdbinit $GDB_ARGS

# Steps to run after amd-gdb exits
chmod -x $REALPATH/amd-gdb
unset ENABLE_HSAIL_GDB

# Done in case GDB didnt exit cleanly

ipcrm -M 5678 2> /dev/null
ipcrm -M 1234 2> /dev/null
ipcrm -M 2222 2> /dev/null
ipcrm -M 1111 2> /dev/null
# The FIFO will be created in the same directory that the script is in 
rm -f fifo-agent-w-gdb-r
rm -f fifo-gdb-w-agent-r

